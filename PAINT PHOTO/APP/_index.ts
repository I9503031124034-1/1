import
{
readDirectoryAsync
,
readAsStringAsync
,
writeAsStringAsync
,
cacheDirectory
}
from
'expo-file-system'
var
READDIRECTORY
=
readDirectoryAsync
,
READFILE
=
readAsStringAsync
,
WRITEFILE
=
writeAsStringAsync
,
PATHCACHE
=
cacheDirectory
import 
{
Link 
} 
from 
'expo-router'
var
LINK
=
Link
import
{
createElement
,
memo
,
useEffect
,
useState
}
from
'react'
var 
ELEMENT
= 
createElement
,
EFFECT 
= 
useEffect
,
MEMO 
= 
memo
,
STATE
=
useState
import
{
Pressable
,
Text
,
View
}
from
'react-native'
var
BUTTON
=
Pressable
,
TEXT
=
Text
,
VIEW
=
View
export 
default 
(

) =>
{
var
X
EFFECT
(
(

) =>
{
READDIRECTORY
(
PATHCACHE
)
.
then
(
(
PA
) =>
{
// Â£
PA
.
includes
(
// AWESOME LIST
'FILE1'
)
?
READFILE
(
'FILE1'
)
.then
(
(
PA_
) =>
{
X
[
1
]
(
JSON
.
parse
(
PA_
)
)
}
)
:
WRITEFILE
(
'FILE1'
,
''
)
.
then
(
(

) =>
{
X
[
1
]
(
{

}
)
}
)
}
)
}
,
[

]
)
EFFECT
(
(

) =>
{

}
,
[
X
[
0
]
]
)
return X
[
0
]
&& 
ELEMENT
(
VIEW
,
{
style
:  
{
display
: 
'flex'
,
flexDirection
: 
'row'
,
height
: 
'100%'
,
justifyContent
: 
'flex-start'
,
position
: 
'relative'
,
width
: 
'100%'
}
}
,
ELEMENT
(
VIEW
,
{
style
:
{
backgroundColor
: 
'rgba(255, 255, 255, 1)'
,
flexGrow
: 
1
,
flexShrink
: 
3
,
position
: 
'relative'
}
}
,
ELEMENT
(
LINK
,
{
href
:
{
pathname
:
'/PHOTO/[ID]'
,
params
:
{
ID
:
'1'
}
}
}
,
'1'
)
)
)
}